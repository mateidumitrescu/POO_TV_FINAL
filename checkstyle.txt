Starting audit...
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect2_git/./src/notification/Notification.java:9:5: Class 'Notification' looks like designed for extension (can be subclassed), but the method 'getNotificationType' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Notification' final or making the method 'getNotificationType' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect2_git/./src/notification/Notification.java:13:5: Class 'Notification' looks like designed for extension (can be subclassed), but the method 'setNotificationType' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Notification' final or making the method 'setNotificationType' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect2_git/./src/notification/Notification.java:13:37: Parameter notificationType should be final. [FinalParameters]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect2_git/./src/notification/Notification.java:17:5: Class 'Notification' looks like designed for extension (can be subclassed), but the method 'getMovieName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Notification' final or making the method 'getMovieName' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect2_git/./src/notification/Notification.java:21:5: Class 'Notification' looks like designed for extension (can be subclassed), but the method 'setMovieName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Notification' final or making the method 'setMovieName' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect2_git/./src/notification/Notification.java:21:30: Parameter movieName should be final. [FinalParameters]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect2_git/./src/notification/Notification.java:25:25: Parameter type should be final. [FinalParameters]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect2_git/./src/notification/Notification.java:25:38: Parameter movie should be final. [FinalParameters]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect2_git/./src/Test.java:1: File does not end with a newline. [NewlineAtEndOfFile]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect2_git/./src/Test.java:9:28: Using the '.*' form of import should be avoided - java.util.concurrent.*. [AvoidStarImport]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect2_git/./src/Test.java:158: Line is longer than 100 characters (found 108). [LineLength]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect2_git/./src/Test.java:206:65: Parameter testFileName should be final. [FinalParameters]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect2_git/./src/Test.java:222: Line is longer than 100 characters (found 108). [LineLength]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect2_git/./src/users/User.java:3:8: Unused import - application.Application. [UnusedImports]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect2_git/./src/users/User.java:10:8: Unused import - java.util.Collections. [UnusedImports]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect2_git/./src/users/User.java:11:8: Unused import - java.util.Comparator. [UnusedImports]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect2_git/./src/users/User.java:12:8: Unused import - java.util.Iterator. [UnusedImports]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect2_git/./src/users/User.java:20:5: Class 'User' looks like designed for extension (can be subclassed), but the method 'getSubscribedGenres' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'User' final or making the method 'getSubscribedGenres' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect2_git/./src/users/User.java:24:5: Class 'User' looks like designed for extension (can be subclassed), but the method 'setSubscribedGenres' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'User' final or making the method 'setSubscribedGenres' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect2_git/./src/users/User.java:24:37: Parameter subscribedGenres should be final. [FinalParameters]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect2_git/./src/users/User.java:28:5: Class 'User' looks like designed for extension (can be subclassed), but the method 'addSubscribedGenre' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'User' final or making the method 'addSubscribedGenre' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect2_git/./src/users/User.java:28:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect2_git/./src/users/User.java:28:36: Parameter genre should be final. [FinalParameters]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect2_git/./src/users/User.java:34:5: Class 'User' looks like designed for extension (can be subclassed), but the method 'getLikedGenres' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'User' final or making the method 'getLikedGenres' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect2_git/./src/users/User.java:38:5: Class 'User' looks like designed for extension (can be subclassed), but the method 'addGenre' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'User' final or making the method 'addGenre' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect2_git/./src/users/User.java:38:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect2_git/./src/users/User.java:38:26: Parameter genreToAdd should be final. [FinalParameters]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect2_git/./src/users/User.java:42:5: Class 'User' looks like designed for extension (can be subclassed), but the method 'sortGenres' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'User' final or making the method 'sortGenres' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect2_git/./src/users/User.java:42:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect2_git/./src/users/User.java:53:5: Class 'User' looks like designed for extension (can be subclassed), but the method 'getSortedMovies' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'User' final or making the method 'getSortedMovies' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect2_git/./src/users/User.java:57:5: Class 'User' looks like designed for extension (can be subclassed), but the method 'setSortedMovies' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'User' final or making the method 'setSortedMovies' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect2_git/./src/users/User.java:57:33: Parameter sortedMovies should be final. [FinalParameters]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect2_git/./src/users/User.java:61:5: Class 'User' looks like designed for extension (can be subclassed), but the method 'sortMovies' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'User' final or making the method 'sortMovies' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect2_git/./src/users/User.java:61:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect2_git/./src/users/User.java:69:5: Class 'User' looks like designed for extension (can be subclassed), but the method 'setLikedGenres' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'User' final or making the method 'setLikedGenres' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect2_git/./src/users/User.java:69:32: Parameter likedGenres should be final. [FinalParameters]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect2_git/./src/users/User.java:89:40: '15' is a magic number. [MagicNumber]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect2_git/./src/users/User.java:246:5: Class 'User' looks like designed for extension (can be subclassed), but the method 'deleteMovie' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'User' final or making the method 'deleteMovie' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect2_git/./src/users/User.java:246:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect2_git/./src/users/User.java:246:29: Parameter movieToDelete should be final. [FinalParameters]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect2_git/./src/users/User.java:286:5: Class 'User' looks like designed for extension (can be subclassed), but the method 'addMovie' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'User' final or making the method 'addMovie' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect2_git/./src/users/User.java:286:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect2_git/./src/users/User.java:286:26: Parameter movieToAdd should be final. [FinalParameters]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect2_git/./src/users/User.java:305:5: Class 'User' looks like designed for extension (can be subclassed), but the method 'getNotifications' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'User' final or making the method 'getNotifications' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect2_git/./src/users/User.java:309:5: Class 'User' looks like designed for extension (can be subclassed), but the method 'setNotifications' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'User' final or making the method 'setNotifications' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect2_git/./src/users/User.java:309:34: Parameter notifications should be final. [FinalParameters]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect2_git/./src/users/User.java:326:5: Class 'User' looks like designed for extension (can be subclassed), but the method 'addRecommendation' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'User' final or making the method 'addRecommendation' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect2_git/./src/users/User.java:326:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect2_git/./src/users/User.java:326:35: Parameter movie should be final. [FinalParameters]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect2_git/./src/users/User.java:335:5: Class 'User' looks like designed for extension (can be subclassed), but the method 'update' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'User' final or making the method 'update' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect2_git/./src/users/User.java:336:24: Parameter movie should be final. [FinalParameters]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect2_git/./src/users/User.java:336:37: Parameter type should be final. [FinalParameters]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect2_git/./src/users/User.java:337:9: switch without "default" clause. [MissingSwitchDefault]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect2_git/./src/Main.java:11:1: Utility classes should not have a public or default constructor. [HideUtilityClassConstructor]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect2_git/./src/Main.java:12:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect2_git/./src/Main.java:12:29: Parameter args should be final. [FinalParameters]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect2_git/./src/actions/Action.java:8:8: Unused import - pages.MoviesPage. [UnusedImports]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect2_git/./src/actions/Action.java:25:5: Class 'Action' looks like designed for extension (can be subclassed), but the method 'getDeletedMovie' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Action' final or making the method 'getDeletedMovie' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect2_git/./src/actions/Action.java:29:5: Class 'Action' looks like designed for extension (can be subclassed), but the method 'setDeletedMovie' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Action' final or making the method 'setDeletedMovie' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect2_git/./src/actions/Action.java:29:33: Parameter deletedMovie should be final. [FinalParameters]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect2_git/./src/actions/Action.java:49:5: Class 'Action' looks like designed for extension (can be subclassed), but the method 'getSubscribedGenre' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Action' final or making the method 'getSubscribedGenre' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect2_git/./src/actions/Action.java:53:5: Class 'Action' looks like designed for extension (can be subclassed), but the method 'setSubscribedGenre' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Action' final or making the method 'setSubscribedGenre' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect2_git/./src/actions/Action.java:53:36: Parameter subscribedGenre should be final. [FinalParameters]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect2_git/./src/actions/Action.java:59:5: Class 'Action' looks like designed for extension (can be subclassed), but the method 'getAddedMovie' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Action' final or making the method 'getAddedMovie' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect2_git/./src/actions/Action.java:63:5: Class 'Action' looks like designed for extension (can be subclassed), but the method 'setAddedMovie' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Action' final or making the method 'setAddedMovie' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect2_git/./src/actions/Action.java:63:31: Parameter addedMovie should be final. [FinalParameters]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect2_git/./src/actions/Action.java:192:26: 'movie' hides a field. [HiddenField]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect2_git/./src/actions/Action.java:200:5: Class 'Action' looks like designed for extension (can be subclassed), but the method 'backPage' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Action' final or making the method 'backPage' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect2_git/./src/actions/Action.java:200:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect2_git/./src/actions/Action.java:208:9: switch without "default" clause. [MissingSwitchDefault]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect2_git/./src/actions/Action.java:209: Line is longer than 100 characters (found 118). [LineLength]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect2_git/./src/actions/Action.java:218:5: Class 'Action' looks like designed for extension (can be subclassed), but the method 'checkIfMovieExists' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Action' final or making the method 'checkIfMovieExists' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect2_git/./src/actions/Action.java:219:20: 'movie' hides a field. [HiddenField]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect2_git/./src/actions/Action.java:220:13: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect2_git/./src/actions/Action.java:226:5: Class 'Action' looks like designed for extension (can be subclassed), but the method 'subscribe' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Action' final or making the method 'subscribe' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect2_git/./src/actions/Action.java:226:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect2_git/./src/actions/Action.java:226:27: Parameter output should be final. [FinalParameters]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect2_git/./src/actions/Action.java:234: Line is longer than 100 characters (found 117). [LineLength]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect2_git/./src/actions/Action.java:247:5: Class 'Action' looks like designed for extension (can be subclassed), but the method 'databaseChange' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Action' final or making the method 'databaseChange' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect2_git/./src/actions/Action.java:247:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect2_git/./src/actions/Action.java:250:9: switch without "default" clause. [MissingSwitchDefault]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect2_git/./src/actions/Action.java:275:79: '&&' should be on a new line. [OperatorWrap]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect2_git/./src/actions/Action.java:300: Line is longer than 100 characters (found 135). [LineLength]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect2_git/./src/actions/Action.java:301:61: ',' is not followed by whitespace. [WhitespaceAfter]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect2_git/./src/actions/Action.java:448: Line is longer than 100 characters (found 123). [LineLength]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect2_git/./src/actions/Action.java:455:65: '&&' should be on a new line. [OperatorWrap]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect2_git/./src/actions/Action.java:475:26: 'movie' hides a field. [HiddenField]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect2_git/./src/actions/Action.java:487:49: 'movie' hides a field. [HiddenField]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect2_git/./src/actions/Action.java:499:26: 'movie' hides a field. [HiddenField]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect2_git/./src/actions/Action.java:520:26: 'movie' hides a field. [HiddenField]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect2_git/./src/actions/Action.java:583:5: Class 'Action' looks like designed for extension (can be subclassed), but the method 'alreadyRated' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Action' final or making the method 'alreadyRated' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect2_git/./src/actions/Action.java:583:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect2_git/./src/actions/Action.java:583:33: Parameter currentUser should be final. [FinalParameters]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect2_git/./src/actions/Action.java:583:51: Parameter movieToFind should be final. [FinalParameters]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect2_git/./src/actions/Action.java:584:20: 'movie' hides a field. [HiddenField]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect2_git/./src/actions/Action.java:598:5: Method length is 163 lines (max allowed is 150). [MethodLength]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect2_git/./src/actions/Action.java:640:74: '&&' should be on a new line. [OperatorWrap]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect2_git/./src/actions/Action.java:723:42: '5' is a magic number. [MagicNumber]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect2_git/./src/actions/Action.java:750:46: '10' is a magic number. [MagicNumber]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect2_git/./src/actions/Action.java:756:41: '10' is a magic number. [MagicNumber]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect2_git/./src/actions/Action.java:768:9: switch without "default" clause. [MissingSwitchDefault]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect2_git/./src/movies/Genre.java:6:18: Parameter genreType should be final. [FinalParameters]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect2_git/./src/movies/Genre.java:12:5: Class 'Genre' looks like designed for extension (can be subclassed), but the method 'getType' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Genre' final or making the method 'getType' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect2_git/./src/movies/Genre.java:16:5: Class 'Genre' looks like designed for extension (can be subclassed), but the method 'setType' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Genre' final or making the method 'setType' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect2_git/./src/movies/Genre.java:16:25: Parameter type should be final. [FinalParameters]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect2_git/./src/movies/Genre.java:20:5: Class 'Genre' looks like designed for extension (can be subclassed), but the method 'getNumberOfLikes' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Genre' final or making the method 'getNumberOfLikes' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect2_git/./src/movies/Genre.java:24:5: Class 'Genre' looks like designed for extension (can be subclassed), but the method 'setNumberOfLikes' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Genre' final or making the method 'setNumberOfLikes' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect2_git/./src/movies/Genre.java:24:34: Parameter numberOfLikes should be final. [FinalParameters]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect2_git/./src/movies/Genre.java:28:5: Class 'Genre' looks like designed for extension (can be subclassed), but the method 'increaseLikes' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Genre' final or making the method 'increaseLikes' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect2_git/./src/movies/Genre.java:28:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect2_git/./src/movies/Movie.java:53:5: Class 'Movie' looks like designed for extension (can be subclassed), but the method 'getNumRatingPeople' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Movie' final or making the method 'getNumRatingPeople' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect2_git/./src/movies/Movie.java:57:5: Class 'Movie' looks like designed for extension (can be subclassed), but the method 'setNumRatingPeople' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Movie' final or making the method 'setNumRatingPeople' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect2_git/./src/movies/Movie.java:57:36: Parameter numRatingPeople should be final. [FinalParameters]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect2_git/./src/movies/Movie.java:61:5: Class 'Movie' looks like designed for extension (can be subclassed), but the method 'increaseNumPeopleRated' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Movie' final or making the method 'increaseNumPeopleRated' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect2_git/./src/movies/Movie.java:61:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect2_git/./src/application/Application.java:9:8: Unused import - notification.Notification. [UnusedImports]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect2_git/./src/application/Application.java:10:13: Using the '.*' form of import should be avoided - pages.*. [AvoidStarImport]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect2_git/./src/application/Application.java:26:31: Parameter pagesStack should be final. [FinalParameters]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect2_git/./src/application/Application.java:179:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect2_git/./src/application/Application.java:179:29: Parameter movie should be final. [FinalParameters]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect2_git/./src/application/Application.java:179:42: Parameter type should be final. [FinalParameters]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect2_git/./src/application/Application.java:185:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect2_git/./src/application/Application.java:185:30: Parameter movieName should be final. [FinalParameters]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect2_git/./src/application/Application.java:220:55: '||' should be on a new line. [OperatorWrap]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect2_git/./src/application/Application.java:221:53: '||' should be on a new line. [OperatorWrap]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect2_git/./src/application/Application.java:232:48: '&&' should be on a new line. [OperatorWrap]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect2_git/./src/application/Application.java:233:37: '&&' should be on a new line. [OperatorWrap]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect2_git/./src/errors/OutputHandler.java:58:5: Class 'OutputHandler' looks like designed for extension (can be subclassed), but the method 'createNotificationNodes' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'OutputHandler' final or making the method 'createNotificationNodes' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect2_git/./src/errors/OutputHandler.java:58:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect2_git/./src/errors/OutputHandler.java:124: Line is longer than 100 characters (found 123). [LineLength]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect2_git/./src/errors/OutputHandler.java:197:36: ',' is not followed by whitespace. [WhitespaceAfter]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect2_git/./src/errors/OutputHandler.java:204:5: Class 'OutputHandler' looks like designed for extension (can be subclassed), but the method 'recommendationOutput' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'OutputHandler' final or making the method 'recommendationOutput' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect2_git/./src/errors/OutputHandler.java:204:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect2_git/./src/errors/OutputHandler.java:204:44: Parameter user should be final. [FinalParameters]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect2_git/./src/pages/Page.java:34:5: Class 'Page' looks like designed for extension (can be subclassed), but the method 'setAvailablePages' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Page' final or making the method 'setAvailablePages' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect2_git/./src/pages/Page.java:34:35: Parameter availablePages should be final. [FinalParameters]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect2_git/./src/pages/Page.java:38:5: Class 'Page' looks like designed for extension (can be subclassed), but the method 'setAvailableEvents' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Page' final or making the method 'setAvailableEvents' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect2_git/./src/pages/Page.java:38:36: Parameter availableEvents should be final. [FinalParameters]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect2_git/./src/pages/Page.java:42:5: Class 'Page' looks like designed for extension (can be subclassed), but the method 'getName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Page' final or making the method 'getName' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect2_git/./src/pages/Page.java:46:5: Class 'Page' looks like designed for extension (can be subclassed), but the method 'setName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Page' final or making the method 'setName' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect2_git/./src/pages/Page.java:46:25: Parameter name should be final. [FinalParameters]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect2_git/./src/pages/SeeDetailsPage.java:56:5: Class 'SeeDetailsPage' looks like designed for extension (can be subclassed), but the method 'deleteMovie' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'SeeDetailsPage' final or making the method 'deleteMovie' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect2_git/./src/pages/SeeDetailsPage.java:56:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect2_git/./src/pages/SeeDetailsPage.java:56:29: Parameter movieToDelete should be final. [FinalParameters]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect2_git/./src/interfaces/Observer.java:7:5: Missing a Javadoc comment. [MissingJavadocMethod]
Audit done.
Checkstyle ends with 145 errors.
